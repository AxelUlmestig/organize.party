services:
  db:
    build:
      context: .
      dockerfile: db/postgres.Dockerfile
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: events
      POSTGRES_PASSWORD: postgres
      # POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: postgres
      TZ: Europe/Stockholm
      PGTZ: Europe/Stockholm
    volumes:
      - dbdata:/var/lib/postgresql/data
      - .:/repo
      - ~/.sqitch:/root/.sqitch
    working_dir: /repo
    restart: always

  server:
    image: axelulmestig/organize.party:${IMAGE_TAG:-0.8}
    ports:
      - "8081:8081"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - mailhog
    environment:
      DB_HOST: db
      DB_PORT: 5432
      HOST_URL: "http://localhost:8081"
      SMTP_SERVER: "mailhog"
      SMTP_PORT: 1025
      SMTP_LOGIN: null
      SMTP_PASSWORD: null
    env_file: .env
    # volumes:
    #   - ./frontend:/events/frontend

  # use this if you want to do frontend dev work without installing Haskell
  dev-server:
    image: axelulmestig/organize.party:${IMAGE_TAG:-0.8}
    ports:
      - "8081:8081"
    depends_on:
      - db
      - mailhog
    environment:
      DB_HOST: db
      DB_PORT: 5432
      HOST_URL: "http://localhost:8081"
      SMTP_SERVER: "mailhog"
      SMTP_PORT: 1025
      SMTP_LOGIN: null
      SMTP_PASSWORD: null
    env_file: .env
    volumes:
      - ./frontend:/events/frontend

  production:
    image: axelulmestig/organize.party:${IMAGE_TAG:-0.8}
    ports:
      - "8081:8081"
    depends_on:
      - db
      - nginx
    environment:
      DB_HOST: db
      DB_PORT: 5432
      HOST_URL: "https://organize.party"
    env_file: .env
    restart: always

  nginx:
    image: nginx:latest
    userns_mode: host
    network_mode: host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  nginx-certbot:
    image: nginx:latest
    userns_mode: host
    network_mode: host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx-certbot.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/nginx/ssl/:rw

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  dbdata:
